@page "/books/fetchbooks"
@inject IJSRuntime js
@inject IBookRepository BookRepository

<h3>Books</h3>
@if (WillRead == null)
{
    <text>Loading...</text>
}
else if (WillRead.Any() == false)
{
    <text>No Records Found.</text>
}
else
{



<div class="d-flex justify-content-start flex-row bd-highlight mb-3" >
    <div class="p-2 flex-fill">
        <div class="card text-white bg-dark mb-3" style="max-width: 30rem;">        
            <div class="card-body">
                <h5 class="card-title">I want to read</h5>
            </div>
        </div>
        <Column books="WillRead"></Column>
    </div>

    <div class="p-2 flex-fill">
        <div class="card text-white bg-dark mb-3" style="max-width: 30rem;">
            <div class="card-body">
                <h5 class="card-title">In progress</h5>
            </div>
        </div>
        <Column books="InProgress"></Column>
    </div>
    <div class="p-2 flex-fill">
        <div class="card text-white bg-dark mb-3" style="max-width: 30rem;">
            <div class="card-body">
                <h5 class="card-title">I read</h5>
            </div>
        </div>
        <Column books="Read"></Column>
    </div>
</div>

}

@code {
    List<Book> WillRead { get; set; }
    List<Book> InProgress { get; set; }
    List<Book> Read { get; set; }

    protected override async Task OnInitializedAsync()
    {
        WillRead = await BookRepository.GetBooksByIdAsync(1);
        InProgress = await BookRepository.GetBooksByIdAsync(2);
        Read = await BookRepository.GetBooksByIdAsync(3);
    }
}
