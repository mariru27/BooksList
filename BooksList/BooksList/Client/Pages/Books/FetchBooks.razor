@page "/books/fetchbooks"
@inject IJSRuntime js
@inject IBookRepository BookRepository

<h3>Books</h3>
@if (books == null)
{
    <text>Loading...</text>
}
else if (books.Any() == false)
{
    <text>No Records Found.</text>

}
else
{



<div class="d-flex justify-content-start flex-row bd-highlight mb-3">
    <div class="p-2 flex-fill">
        <div class="card text-white bg-dark mb-3" style="max-width: 30rem;">
            <div class="card-body">
                <h5 class="card-title">I want to read</h5>
            </div>
        </div>
        <Column books="books[0]"></Column>
    </div>

    <div class="p-2 flex-fill">
        <div class="card text-white bg-dark mb-3" style="max-width: 30rem;">
            <div class="card-body">
                <h5 class="card-title">In progress</h5>
            </div>
        </div>
        <Column books="books[1]"></Column>
    </div>
    <div class="p-2 flex-fill">
        <div class="card text-white bg-dark mb-3" style="max-width: 30rem;">
            <div class="card-body">
                <h5 class="card-title">I read</h5>
            </div>
        </div>
        <Column books="books[2]"></Column>
    </div>
</div>

}

@code {
    List<List<Book>> books = new();


    protected override async Task OnInitializedAsync()
    {
        books.Add(await BookRepository.GetBooksByIdsAsync(1));
        books.Add(await BookRepository.GetBooksByIdsAsync(2));
        books.Add(await BookRepository.GetBooksByIdsAsync(3));
    }
}
